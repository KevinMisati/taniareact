{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","characterData","removeCharacter","map","row","index","name","job","onClick","Table","Form","handleSubmit","useState","person","setPerson","handleChange","event","console","log","target","value","htmlFor","type","id","onChange","App","characters","setCharacters","className","filter","character","i","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,WACvB,OACI,gCACE,+BACE,sCACA,2CAQCC,EAAY,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,cAAcC,EAAqB,EAArBA,gBAErC,OACI,gCACCD,EAAcE,KAAI,SAACC,EAAIC,GACpB,OAAO,+BACH,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMN,EAAgBG,IAAvC,wBAJUA,SA2BbI,EAVD,SAAC,GAAwC,IAAtCR,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,gBAG9B,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWD,cAAeA,EAAeC,gBAAiBA,Q,OCLjDQ,EApCK,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAAkB,EAETC,mBAAS,CAACN,KAAK,GAAGC,IAAI,KAFb,mBAE7BM,EAF6B,KAEtBC,EAFsB,KAKlCC,EAAe,SAACC,GAEjBC,QAAQC,IAAIF,EAAMG,QACE,QAArBH,EAAMG,OAAOb,KACZQ,EAAU,CAAER,KAAMU,EAAMG,OAAOC,QAG/BN,EAAU,2BAAKD,GAAN,IAAaN,IAAKS,EAAMG,OAAOC,UAU3C,OAAO,iCACH,uBAAOC,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAOhB,KAAK,OAAOiB,GAAG,OAAOH,MAAOP,EAAOP,MAAQ,GAAIkB,SAAUT,IAC7E,uBAAOM,QAAQ,MAAf,iBACA,uBAAOC,KAAK,OAAOhB,KAAK,MAAMiB,GAAG,MAAMH,MAAOP,EAAON,KAAO,GAAIiB,SAAUT,IAE1E,uBAAOO,KAAK,SAASF,MAAM,SAASZ,QAZnB,WAChBG,EAAaE,GACbC,EAAU,CAAER,KAAM,GAAIC,IAAK,YCUnBkB,EA3BF,WAAO,IAAD,EAEqBb,mBAAU,IAF/B,mBAERc,EAFQ,KAEIC,EAFJ,KAkBf,OACI,sBAAKC,UAAU,YAAf,UAEI,cAAC,EAAD,CAAO3B,cAAiByB,EAAYxB,gBAbpB,SAACG,GACrBsB,EAAeD,EAAWG,QACpB,SAACC,EAAWC,GACV,OAAOA,IAAM1B,SAWjB,cAAC,EAAD,CAAMM,aAlBM,SAACmB,GACjBH,EAAc,GAAD,mBAAMD,GAAN,CAAkBI,Y,MCLvCE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2b019598.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nexport const TableHeader = () => {\r\n    return (\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Job</th>\r\n          </tr>\r\n        </thead>\r\n    \r\n    )\r\n}\r\n\r\n\r\nexport const TableBody = ({characterData,removeCharacter}) => {\r\n   \r\n    return (\r\n        <tbody>\r\n        {characterData.map((row,index) => {\r\n            return <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                  <button onClick={() => removeCharacter(index)}>\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>;\r\n        })}\r\n        </tbody>\r\n    \r\n    )\r\n}\r\n\r\n\r\n\r\nconst Table = ({ characterData, removeCharacter }) => {\r\n  \r\n\r\n  return (\r\n    <table>\r\n      <TableHeader />\r\n      <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n    </table>\r\n  );\r\n};\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\n\r\n\r\n\r\nexport const Form = ({handleSubmit}) => {\r\n\r\n    const [person,setPerson] = useState({name:\"\",job:\"\"});\r\n   \r\n\r\nconst handleChange = (event) => {\r\n     /* const { name, value } = event.target; */\r\n     console.log(event.target)\r\nif (event.target.name == \"name\"){\r\n     setPerson({ name: event.target.value });\r\n}\r\nelse{\r\n     setPerson({ ...person,job: event.target.value });\r\n}\r\n   };\r\n\r\n    const submitForm = () => {\r\n       handleSubmit(person);\r\n       setPerson({ name: \"\", job: \"\" });\r\n     };\r\n    \r\n\r\n  return <form>\r\n      <label htmlFor=\"name\">Name</label>\r\n      <input type=\"text\" name=\"name\" id=\"name\" value={person.name || \"\"} onChange={handleChange} />\r\n      <label htmlFor=\"job\">Job</label>\r\n      <input type=\"text\" name=\"job\" id=\"job\" value={person.job || \"\"} onChange={handleChange} />\r\n\r\n      <input type=\"button\" value=\"Submit\" onClick={submitForm} />\r\n    </form>;\r\n}\r\n\r\n\r\n\r\n \r\n\r\nexport default Form;","import React, { useState } from \"react\"\r\n\r\nimport Table from \"./Table\"\r\nimport Form from \"./Form\"\r\n\r\nconst App =  () => {\r\n\r\n    const [characters, setCharacters] = useState( [] )\r\n\r\n   const handleSubmit = (character) => {\r\n        setCharacters( [...characters, character] );\r\n    };\r\n\r\n    const removeCharacter = (index) => {\r\n        setCharacters( characters.filter(\r\n              (character, i) => {\r\n                return i !== index;\r\n              }\r\n            ) \r\n        )\r\n    }\r\n\r\n    /* console.log(characters); */\r\n    return (\r\n        <div className=\"container\">\r\n            \r\n            <Table characterData = {characters} removeCharacter={removeCharacter} /> \r\n            <Form handleSubmit={handleSubmit} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}